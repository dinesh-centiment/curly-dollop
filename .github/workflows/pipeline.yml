name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  SetupMySQL:
    name: Setup MySQL
    runs-on: ubuntu-latest

    steps:
      - name: Install dockerize
        run: |
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
          rm dockerize-linux-amd64-v0.6.1.tar.gz

      - name: Start MySQL
        run: |
          dockerize -wait tcp://localhost:3306 -timeout 1m \
          docker run --name mysql \
          -e MYSQL_DATABASE=test \
          -e MYSQL_USER=test \
          -e MYSQL_PASSWORD=test \
          -e MYSQL_ROOT_PASSWORD=root \
          -p 3306:3306 \
          -d mysql:5.7t tcp://localhost:3306 -timeout 1m

      - name: Wait for MySQL
        run: sleep 10

  RunUnitTests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    needs: [SetupMySQL]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: composer install

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate --ansi

      - name: Run Migrations
        run: php artisan migrate --seed

      - name: Run Unit Tests
        run: php artisan test --testsuite=Unit
          
  RunFeatureTests:
    name: Run Feature Tests
    runs-on: ubuntu-latest
    
    needs: [SetupMySQL]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: composer install

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate --ansi

      - name: Run Migrations
        run: php artisan migrate --seed

      - name: Run Feature Tests
        run: php artisan test --testsuite=Feature

  Notify:
    name: Notify
    needs: [RunUnitTests, RunFeatureTests]
    runs-on: ubuntu-latest
    steps:
      - name: Notify
        run: |
          php artisan app:send-notifications '{"unitTests": "${{ job.RunUnitTests.status }}", "FeatureTests": "${{ job.RunFeatureTests.status }}"}'
    